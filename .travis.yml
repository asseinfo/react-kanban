language: node_js
node_js:
  - "lts/*"
env:
  global:
    - CC_TEST_REPORTER_ID=0c013a7ad123ef27b331e29e37b4730c03971c54ddaf75a34023c8103a126c12
    - NODE_ENV=test
cache:
  directories:
    - ~/.cache
before_script:
  - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
  - chmod +x ./cc-test-reporter
  - ./cc-test-reporter before-build
addons:
  apt:
    packages:
    - libgconf-2-4
script:
  # unit tests, also prints code coverage summary
  - npm run test -- --coverageDirectory unit-coverage

  # to enable code instrumentation for E2E tests set NODE_ENV=cypress
  - NODE_ENV=cypress npm run server &
  - npm run cypress run -- --browser chrome
  - npx nyc report --reporter=text-summary

after_script:
  # format and combine unit and e2e code coverage
  # https://docs.codeclimate.com/docs/travis-ci-test-coverage
  # https://docs.codeclimate.com/docs/configuring-test-coverage#section-parallel-tests
  - ./cc-test-reporter format-coverage -t lcov -o combined-coverage/unit.json unit-coverage/lcov.info
  - ./cc-test-reporter format-coverage -t lcov -o combined-coverage/e2e.json coverage/lcov.info
  - ./cc-test-reporter sum-coverage combined-coverage/*.json -p 2
  - if [[ "$TRAVIS_TEST_RESULT" == 0 ]]; then ./cc-test-reporter upload-coverage; fi
before_deploy:
  - npm run docz build
deploy:
  provider: pages
  skip_cleanup: true
  github_token: $GITHUB_TOKEN
  local-dir: .docz/dist
  on:
    branch: master
